<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKFNQQmjRzo2o0Y4SqNGOEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNG
        OEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNGOEqjRjhKo0Y4SqNG
        OEqjRjhKo0Y4SqNHOjahTUEJoE9EjpVpaO2Ne4H3jXuB9417gfeNe4H3jXuB9417gfeNe4H3jXuB9417
        gfeNe4H3jXuB9417gfeNe4H3jXuB9417gfeNe4H3jXuB9417gfeNe4H3jXuB9417gfeNe4H3jXuB9417
        gfeNe4H3jXuB9417gfeNe4H3lWlo7aBPRI6ZXVj0cbzb/mbW//9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2fV
        /f9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2fV
        /f9n1f3/Z9X9/2fV/f9n1f3/Z9X9/2bW//9xvNv+mV1Y9JdkYfxsyOv9Ztf//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztf//2zI6/2XZGH8l2Rh/GzI6/1m1///Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1///bMjr/ZdkYfyXZGH8bMjr/WbX
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bX//9syOv9l2Rh/Jdk
        YfxsyOv9Ztf//2bW//9m1v//Ztb//2bW//9m1///Zdj//2bX//9l2P//Ztf//2bW//9m1v//Zdf//2bW
        /v9m1///Ztf//2bW//9m1v//Ztb//2bX//9l1///Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztf//2zI
        6/2XZGH8l2Rh/GzI6/1m1///Ztb//2bW//9m1v//Ztf//2vL7/5/m638iIWP/H+csP1qzPH+Ztf//2fV
        /f94q8P9i4CI/YaMmPxuw+X+Ztf//2bW//9m1v//ac7z/m7D5P1m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1///bMjr/ZdkYfyXZGH8bMjr/WbX//9m1v//Ztb//2bW//9pz/X+i3+G/Ix8gvx/nK/9jXp//ImE
        jfxn1Pz+dbLN/ZNrbPx+nrL8iIeS/I17gfxp0Pb+Ztb//2XY//99n7P9km5v/GrM8f5m1///Ztb//2bW
        //9m1v//Ztb//2bX//9syOv9l2Rh/JdkYfxsyOv9Ztf//2bW//9m1v//Zdj//3awyv2QcnX8as3y/mXZ
        //9qzfL+drDK/GfU/f5/nK79gZio/GPc//9ryer9k21u/G/C4/5l2P//aNH4/o53fPybWVL8earC/WXY
        //9m1v//Ztb//2bW//9m1v//Ztf//2zI6/2XZGH8l2Rh/GzI6/1m1///Ztb//2bW//9l2P//fKK3/IqC
        iv1m1v//Ztb//2bW//9l2P//Ztb//2nO9P5qzPH+bsPk/oCZqvyQc3b8as3y/mXY//9zt9T9kXJ0/IOT
        o/yMfYT8Z9P7/mbW//9m1v//Ztb//2bW//9m1///bMjr/ZdkYfyXZGH8bMjr/WbX//9m1v//Ztb//2XY
        //98orf8ioOM/WbW//9m1v//Ztb//2bW//9m1v//adD2/oaLl/yTbW78jXqA/HO41f1l1///Ztf//4WO
        mvyEj5z8bMjr/ZJvcPxyutf9Zdj//2bW//9m1v//Ztb//2bX//9syOv9l2Rh/JdkYfxsyOv9Ztf//2bW
        //9m1v//Zdj//3yjuPyKgYn9Ztb//2bW//9m1///Ztf//2XY//95qcD9kHN2/G7D5f5o0vn+cL/f/WnQ
        9v5ryu/+knBy/HO31P1l2f//hY2a/IWNmfxm1///Ztb//2bW//9m1v//Ztf//2zI6/2XZGH8l2Rh/GzI
        6/1m1///Ztb//2bW//9l2P//dLbS/ZJub/xuw+X9Zdj//27C5P5+nbD8Z9P7/n6esf2LgIj8Zdf//mvK
        7f6Qc3b8b8Dg/Xmpwf2Od3z8aNH4/mXY//9yutj9k25v/G3G6f5m1///Ztb//2bW//9m1///bMjr/Zdk
        YfyXZGH8bMjr/WbX//9m1v//Ztb//2bW//9n0/r+hI6c/JJvcfyJhI78km5v/ISRn/xm1f7/b8Lj/pJw
        cvyJhY78jnl//IqAifxo0fj+gpSk/Hyit/xl2P//Ztb//2fT+v6Ih5H8dbLN/WXY//9m1v//Ztb//2bX
        //9syOv9l2Rh/JdkYfxsyOv9Ztf//2bW//9m1v//Ztb//2bX//9o0vn+drHM/X6dsPx1s8/9Z9P6/mbW
        //9m1///b8Dg/YCYqfx9oLT9a8vv/mbX//9pzvT+aNL5/mbW//9m1v//Ztb//2nP9P5o0fj+Ztb//2bW
        //9m1v//Ztf//2zI6/2XZGH8l2Rh/GzI6/1m1///Ztb//2bW//9m1v//Ztb//2bW//9l2P//Zdj//2XY
        //9m1v//Ztb//2bW//9l1///Zdj//2XY//9m1///Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1///bMjr/ZdkYfyXZGH8bMjr/WbX//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bX//9syOv9l2Rh/JdkYfxsyOv9Ztf//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztb//2bW
        //9m1v//Ztb//2bW//9m1v//Ztb//2bW//9m1v//Ztf//2zI6/2XZGH8l2Rh/GzJ6/1m2P//Ztf//2bX
        //9m1///Ztf//2bX//9m1///Ztf//2bX//9m1///Ztf//2bX//9m1///Ztf//2bX//9m1///Ztf//2bX
        //9m1///Ztf//2bX//9m1///Ztf//2bX//9m1///Ztf//2bX//9m2P//bMnr/ZdkYfyXYl/9cMDf/WrO
        8/9qzfL/as3y/2rN8v9qzfL/as3y/2rN8v9qzfL/as3y/2rN8v9qzfL/as3y/2rN8v9qzfL/as3y/2rN
        8v9qzfL/as3y/2rN8v9qzfL/as3y/2rN8v9qzfL/as3y/2rN8v9qzfL/as3y/2rO8/9wwN/9l2Jf/Z1T
        S/6NbG/9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytw
        df2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Ytwdf2LcHX9i3B1/Y1s
        b/2dU0v+j1pa/D6VxPsxn9X8Mp7U/DKe1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe
        1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe1PwyntT8Mp7U/DKe
        1Pwxn9X8PpXE+49aWvyLXl/8J6fk/Riz+P8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy
        9/8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy9/8Zsvf/GbL3/xmy
        9/8Zsvf/GbL3/xiz+P8nqOT9il5g/IteX/wop+L9GbL2/xqx9f8asfX/GrH1/xqx9f8asfX/GrH1/xqx
        9f8asfX/GLP4/xiz+P8Ys/j/GLP4/xiz+P8Ys/j/GLP4/xiz+P8Ys/j/GLP4/xiz+P8Ys/j/GLP4/xiz
        +P8Ys/j/GLP4/xiz+P8Ys/j/F7T5/yul3/2OXFz5i15f/Cin4v0Zsvb/GrH1/xqx9f8asfX/GrH1/xqx
        9f8asfX/GrH1/x2v8f5GkLr+WISj/1eEpP9XhKT/V4Sk/1eEpP9XhKT/V4Sk/1eEpP9XhKT/V4Sk/1eE
        pP9XhKT/V4Sk/1eEpP9XhKT/V4Sk/1eEpP9WhKX/cHKD/ZxRSLmLXmD8KKfj/Rmy9v8asfX/GrH1/xqx
        9f8asfX/GrH1/xqx9f8Zsvb/UYis/5tSSsqkTD+Go0xAhqNMQIajTECGo0xAhqNMQIajTECGo0xAhqNM
        QIajTECGo0xAhqNMQIajTECGo0xAhqNMQIajTECGo0xAhqNMQIekSz5tok1BHpFZV/Q0ntP+GrH0/xuw
        8/8bsPP/G7Dz/xuw8/8bsPP/GrH1/z6Wxf+SWFbbpUo8NKJMQAChTkMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn09Ej4Zh
        Zu50b373dG9+93Rvfvd0b373dG9+93Rvfvd0b374jVxc6aNMP1elSjwAoE5DAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAChTUEJp0k7N6hIOUqoSDlKqEg5SqhIOUqoSDlKqEg5SqhIOUulSj01nk9FBKBOQwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAP//8AH///AB////////8=
</value>
  </data>
</root>